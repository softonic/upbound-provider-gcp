/*
Copyright 2021 The Crossplane Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by upjet. DO NOT EDIT.

package v1beta1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type ObjectAccessControlObservation struct {

	// The domain associated with the entity.
	Domain *string `json:"domain,omitempty" tf:"domain,omitempty"`

	// The email address associated with the entity.
	Email *string `json:"email,omitempty" tf:"email,omitempty"`

	// The ID for the entity
	EntityID *string `json:"entityId,omitempty" tf:"entity_id,omitempty"`

	// The content generation of the object, if applied to an object.
	Generation *float64 `json:"generation,omitempty" tf:"generation,omitempty"`

	// an identifier for the resource with format {{bucket}}/{{object}}/{{entity}}
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// The project team associated with the entity
	// Structure is documented below.
	ProjectTeam []ObjectAccessControlProjectTeamObservation `json:"projectTeam,omitempty" tf:"project_team,omitempty"`
}

type ObjectAccessControlParameters struct {

	// The name of the bucket.
	// +crossplane:generate:reference:type=github.com/upbound/provider-gcp/apis/storage/v1beta1.Bucket
	// +kubebuilder:validation:Optional
	Bucket *string `json:"bucket,omitempty" tf:"bucket,omitempty"`

	// Reference to a Bucket in storage to populate bucket.
	// +kubebuilder:validation:Optional
	BucketRef *v1.Reference `json:"bucketRef,omitempty" tf:"-"`

	// Selector for a Bucket in storage to populate bucket.
	// +kubebuilder:validation:Optional
	BucketSelector *v1.Selector `json:"bucketSelector,omitempty" tf:"-"`

	// The entity holding the permission, in one of the following forms:
	// +kubebuilder:validation:Required
	Entity *string `json:"entity" tf:"entity,omitempty"`

	// The name of the object to apply the access control to.
	// +crossplane:generate:reference:type=github.com/upbound/provider-gcp/apis/storage/v1beta1.BucketObject
	// +crossplane:generate:reference:extractor=github.com/upbound/upjet/pkg/resource.ExtractParamPath("output_name",true)
	// +kubebuilder:validation:Optional
	Object *string `json:"object,omitempty" tf:"object,omitempty"`

	// Reference to a BucketObject in storage to populate object.
	// +kubebuilder:validation:Optional
	ObjectRef *v1.Reference `json:"objectRef,omitempty" tf:"-"`

	// Selector for a BucketObject in storage to populate object.
	// +kubebuilder:validation:Optional
	ObjectSelector *v1.Selector `json:"objectSelector,omitempty" tf:"-"`

	// The access permission for the entity.
	// Possible values are OWNER and READER.
	// +kubebuilder:validation:Required
	Role *string `json:"role" tf:"role,omitempty"`
}

type ObjectAccessControlProjectTeamObservation struct {

	// The project team associated with the entity
	ProjectNumber *string `json:"projectNumber,omitempty" tf:"project_number,omitempty"`

	// The team.
	// Possible values are editors, owners, and viewers.
	Team *string `json:"team,omitempty" tf:"team,omitempty"`
}

type ObjectAccessControlProjectTeamParameters struct {
}

// ObjectAccessControlSpec defines the desired state of ObjectAccessControl
type ObjectAccessControlSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     ObjectAccessControlParameters `json:"forProvider"`
}

// ObjectAccessControlStatus defines the observed state of ObjectAccessControl.
type ObjectAccessControlStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        ObjectAccessControlObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true

// ObjectAccessControl is the Schema for the ObjectAccessControls API. The ObjectAccessControls resources represent the Access Control Lists (ACLs) for objects within Google Cloud Storage.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,gcp}
type ObjectAccessControl struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              ObjectAccessControlSpec   `json:"spec"`
	Status            ObjectAccessControlStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// ObjectAccessControlList contains a list of ObjectAccessControls
type ObjectAccessControlList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []ObjectAccessControl `json:"items"`
}

// Repository type metadata.
var (
	ObjectAccessControl_Kind             = "ObjectAccessControl"
	ObjectAccessControl_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: ObjectAccessControl_Kind}.String()
	ObjectAccessControl_KindAPIVersion   = ObjectAccessControl_Kind + "." + CRDGroupVersion.String()
	ObjectAccessControl_GroupVersionKind = CRDGroupVersion.WithKind(ObjectAccessControl_Kind)
)

func init() {
	SchemeBuilder.Register(&ObjectAccessControl{}, &ObjectAccessControlList{})
}
